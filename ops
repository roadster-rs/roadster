{"author":{"id":"b588886e8ed752fadf1299e138ac3436c5eb556ee8e02466cae19fa663a1a8d8"},"ops":[{"type":5,"timestamp":1711854588,"nonce":"A8s16ApLMIrrKqYaZloJhwGmjOE=","metadata":{"github-id":"LE_lADOLg8lJc6EH22gzwAAAALdRQ0z"},"added":["enhancement"],"removed":[]},{"type":3,"timestamp":1711867419,"nonce":"SiccudXLl1taNA9nNFvTwzwrXa4=","metadata":{"github-id":"IC_kwDOLg8lJc546Z-D","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2028576643"},"message":"https://github.com/tokio-rs/axum/blob/main/examples/testing/src/main.rs","files":null},{"type":3,"timestamp":1717924477,"nonce":"6wGdwWCJ3ex01xTM8wrxpt1EALo=","metadata":{"github-id":"IC_kwDOLg8lJc6AiCse","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2156407582"},"message":"The main thing we would need to add support for probably is cleaning up the db after tests.\n\nWhat’s the best way to allow tests to be parallelized while also cleaning up the db between tests? Is there a way to track which tables are modified and/or which rows are added? Also, as a best practice, ids of rows added during tests should be random, so ideally if we’re able to track which ids are created by a test we can delete just those ids.","files":null},{"type":3,"timestamp":1717924729,"nonce":"qJQu978P7SjKzM2cYiETGF7a8s8=","metadata":{"github-id":"IC_kwDOLg8lJc6AiDCw","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2156409008"},"message":"It looks like seaorm also allows mocking the db, which may cover our use cases. It may also allow us to run tests without needing a running Postgres instance. Though, it still might be good to have some sanity tests against an actual pg instance, and maybe we would want to run all tests against an actual pg instance still. Tbd","files":null},{"type":3,"timestamp":1717924744,"nonce":"dYKZZr+vBBEYhqg3Wp1f1gB46O4=","metadata":{"github-id":"IC_kwDOLg8lJc6AiDEQ","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2156409104"},"message":"https://www.sea-ql.org/SeaORM/docs/write-test/mock/","files":null},{"type":3,"timestamp":1718465412,"nonce":"vDWT3N7RpUUdnzlwnS/t6OXM0Hc=","metadata":{"github-id":"IC_kwDOLg8lJc6BViLV","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2169905877"},"message":"Could we create something like rspec’s `let` that lazy inits db models and cleans them up when they’re dropped? Or does something like that exist already?","files":null},{"type":3,"timestamp":1718465755,"nonce":"w8t4KUFitp5ZkeIrkMb2ySW2Z54=","metadata":{"github-id":"IC_kwDOLg8lJc6BVnCW","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2169925782"},"message":"Not related to the previous comment, this could be interesting: https://github.com/rust-rspec/rspec\n\nlooks like it hasn’t been updated in a while though. I wonder if it’s still maintained and/or if it’s considered done/stable.","files":null},{"type":3,"timestamp":1718466858,"nonce":"1BRT54Z7T5bT3oejEdJAEm6f01E=","metadata":{"github-id":"IC_kwDOLg8lJc6BWAf_","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2170030079"},"message":"Also interesting: https://crates.io/crates/shoulda","files":null},{"type":3,"timestamp":1718467215,"nonce":"CTideZxfhXe2AD8RtLdDgBBJgcA=","metadata":{"github-id":"IC_kwDOLg8lJc6BWFH2","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2170049014"},"message":"Factoybot for rust: https://crates.io/crates/factori","files":null},{"type":6,"timestamp":1718467888,"nonce":"ZU+kcsMl0FX/d3h9R89HkNXSelg=","metadata":{"github-id":"UCE_lALOLg8lJc6BWFH2zkilcY0"},"target":"2a520916216168d0e0eae25cda4ee93ae2d411cf350e3e2b4d793002f73d18df","message":"Factoybot for rust: https://crates.io/crates/factori\n\nI’m not sure I love the ergonomics of this, but if the mixin fields have typechecking/autocomplete, then it could be interesting","files":null},{"type":3,"timestamp":1719044422,"nonce":"mWx4FmdQCeZEzt38NyLZdJr+kFM=","metadata":{"github-id":"IC_kwDOLg8lJc6CK-G3","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2183913911"},"message":"Can we allow using in-memory SQLite for tests? We’d probably want to provide a way to switch between SQLite and a real db on a per test or per group basis somehow","files":null},{"type":3,"timestamp":1721681087,"nonce":"oeA/pga5XeA5H9v+cRDtgPwCw4Q=","metadata":{"github-id":"IC_kwDOLg8lJc6FvWoc","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2243783196"},"message":"Some testing utilities (mainly related to using `insta` and `rstest`) were added in https://github.com/roadster-rs/roadster/pull/277","files":null},{"type":3,"timestamp":1732478696,"nonce":"O1yajzy0jdOR4nIW6hQ83pHaDoU=","metadata":{"github-id":"IC_kwDOLg8lJc6UyRMB","github-url":"https://github.com/roadster-rs/roadster/issues/33#issuecomment-2496205569"},"message":"Closing this for now because we allow mocking the DB connection and we support TestContainers","files":null},{"type":4,"timestamp":1732478696,"nonce":"eiMB4MpEQJ1wnTrLoyi6mhT+E80=","metadata":{"github-id":"CE_lADOLg8lJc6EH22gzwAAAAOWlt8Y"},"status":2}]}