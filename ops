{"author":{"id":"b588886e8ed752fadf1299e138ac3436c5eb556ee8e02466cae19fa663a1a8d8"},"ops":[{"type":3,"timestamp":1719045064,"nonce":"VO6z9Oi5z1h72cQGfhI521t8VvY=","metadata":{"github-id":"IC_kwDOLg8lJc6CK-tA","github-url":"https://github.com/roadster-rs/roadster/issues/236#issuecomment-2183916352"},"message":"And/or, can leptos be updated to generate an OpenApi schema?","files":null},{"type":3,"timestamp":1719045131,"nonce":"5Wd2fyUCZ9hfm9waSI1XdD0eK2s=","metadata":{"github-id":"IC_kwDOLg8lJc6CK-xh","github-url":"https://github.com/roadster-rs/roadster/issues/236#issuecomment-2183916641"},"message":"TBD, how to support other frameworks besides leptos? Just with an openapi client?","files":null},{"type":3,"timestamp":1719213319,"nonce":"ZFEOCKwns4PC7onlJrqE85Xxhhk=","metadata":{"github-id":"IC_kwDOLg8lJc6CSF5I","github-url":"https://github.com/roadster-rs/roadster/issues/236#issuecomment-2185780808"},"message":"First, the benefits of having open api support vs leptos’s server functions?\n\nopen api pros:\n1. easy to integrate with postman/bruno and other e2e api testing tools\n2. Easily allow external parties to integrate \n3. Easily support multiple platforms/languages for the FE\n\nopen api cons:\n1. More complicated setup/build process\n2. More boilerplate to define routes\n3. More complicated to call the APIs vs leptos server functions\n4. Unnecessarily duplicating types","files":null},{"type":6,"timestamp":1719214580,"nonce":"zoxSjVLKygC5mv36Ijfz4Pcvi5I=","metadata":{"github-id":"UCE_lALOLg8lJc6CSF5Izkk4eh8"},"target":"3159a524592fe3166f2333a81fd2ffa18b4908652426d0e2e374b1a34615800d","message":"First, the benefits of having open api support vs leptos’s server functions?\n\nopen api pros:\n1. easy to integrate with postman/bruno and other e2e api testing tools\n2. Easily allow external parties to integrate \n3. Easily support multiple platforms/languages for the FE\n4. Can deploy/scale the api separately from the ui \n\nopen api cons:\n1. More complicated setup/build process\n2. More boilerplate to define routes\n3. More complicated to call the APIs vs leptos server functions\n5. Unnecessarily duplicating types","files":null},{"type":3,"timestamp":1719213496,"nonce":"/r2tRWc/rE4fzzUbLSDoly7Xphc=","metadata":{"github-id":"IC_kwDOLg8lJc6CSHDA","github-url":"https://github.com/roadster-rs/roadster/issues/236#issuecomment-2185785536"},"message":"I wonder how hard it would be to generate an open api schema for leptos server functions? I think one issue is server functions would possibly tend to be pretty specific and not really well designed APIs. It could be helpful for development, though.","files":null},{"type":3,"timestamp":1719976681,"nonce":"ib9BGiBZ0gfXjAfl76SGAHvWygg=","metadata":{"github-id":"IC_kwDOLg8lJc6DbZYw","github-url":"https://github.com/roadster-rs/roadster/issues/236#issuecomment-2204997168"},"message":"One option for using a generated open api client could be to put the backend in a separate crate, make it a dependency of the frontend crate, and generate the schema+client in a build.rs script in the app (or a meta crate?)\n\nSimilar to what’s described here: https://stackoverflow.com/a/78149324\n\nWe may want to provide more “library crate” type APIs to make this easier so consumers can just take in the backend crate as a library dependency, generate the schema, and pass it to the client generator instead of needing to build and run a binary.","files":null}]}