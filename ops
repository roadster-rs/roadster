{"author":{"id":"b588886e8ed752fadf1299e138ac3436c5eb556ee8e02466cae19fa663a1a8d8"},"ops":[{"type":1,"timestamp":1737275948,"nonce":"cz8qTjJOKqalnmHelbr7/ApTf8c=","metadata":{"github-id":"I_kwDOLg8lJc6mvoR7","github-url":"https://github.com/roadster-rs/roadster/issues/573","origin":"github"},"title":"Provide app state to `HealthCheck` methods","message":"Ideally, we would be able to provide the app state to the `HealthCheck` trait methods, similar to what we do for the `Middleware` trait methods. However, because the `HealthCheck`s are stored in the `AppContext` so they can also be run in the health check API, the `S` type parameter would eventually need to bubble up to the `AppContext`, which is not good. We were doing this originally and it was a huge pain and prevented things like integrating with Leptos.\n\nWe could potentially provide the `AppContext` to the `HealthCheck` methods, which would be fine for internal health checks. However, if a consumer wanted a custom health check that accessed some custom state, this would not help them. So, in the spirit of having the framework provide the model of how things should be implemented, we won't provide the `AppContext` to the `HealthCheck` methods. Instead, if a `HealthCheck` needs the `AppContext` or custom state, they should use `AppContextWeak` or an equivalent of the consumer's custom state.","files":null}]}