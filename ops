{"author":{"id":"b588886e8ed752fadf1299e138ac3436c5eb556ee8e02466cae19fa663a1a8d8"},"ops":[{"type":3,"timestamp":1730965412,"nonce":"AqtpRRgNbykVrYEnnYcNH+x7ve8=","metadata":{"github-id":"IC_kwDOLg8lJc6St_a-","github-url":"https://github.com/roadster-rs/roadster/issues/495#issuecomment-2461529790"},"message":"We’d probably still want this even if we add support for TestContainers because mocking can still be great for unit tests and would probably be a bit faster.","files":null},{"type":6,"timestamp":1731745296,"nonce":"FqdRZUg+fytFI7DPD9gIG4oTtEY=","metadata":{"github-id":"UCE_lALOLg8lJc6St_a-zlVCAWo"},"target":"cb05013b9cc6f05236da76777cc6d3b35ce8e5bd827ce388865a01806df4072f","message":"We’d probably still want this even if we add support for TestContainers because mocking can still be great for unit tests and would probably be faster.","files":null},{"type":3,"timestamp":1731402842,"nonce":"nEI5EC1+Dld3t0Dhasd3swFKOlc=","metadata":{"github-id":"IC_kwDOLg8lJc6TOPYx","github-url":"https://github.com/roadster-rs/roadster/issues/495#issuecomment-2469983793"},"message":"We did get mocking of the entire AppContext working. However, I wonder if it would be better to have `ProvideDb` etc traits, or a `Provide\u003cT\u003e` trait, that can be mocked easily by consumers, and have `AppContext` implement the traits as well. That way, consumers can take a `Provide\u003cT\u003e` impl when they want to be able to mock the Db connection without needing to mock the entire AppContext. It's kind of annoying to mock structs in Rust anyway and it's easier to mock traits. We could even annotate the trait with automock and export it when a feature flag is enabled.","files":null},{"type":4,"timestamp":1731745231,"nonce":"kycmTNnYsO1aqlQX6n1UgR61TKc=","metadata":{"github-id":"CE_lADOLg8lJc6c0pr1zwAAAAORMjKA"},"status":2}]}