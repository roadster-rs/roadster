{"author":{"id":"b588886e8ed752fadf1299e138ac3436c5eb556ee8e02466cae19fa663a1a8d8"},"ops":[{"type":3,"timestamp":1719046463,"nonce":"Uv0iljTIUuT99s2GYZRqbJU/F+0=","metadata":{"github-id":"IC_kwDOLg8lJc6CLHHC","github-url":"https://github.com/roadster-rs/roadster/issues/235#issuecomment-2183950786"},"message":"This can also impact commands implemented by services, eg, the openapi command. It would be good if the openapi command could be run without needing to start the db","files":null},{"type":5,"timestamp":1719080684,"nonce":"J3Ublvu5Tc3D0CBhBerC627QDqU=","metadata":{"github-id":"LE_lADOLg8lJc6NH_KRzwAAAAMV1_Nd"},"added":["enhancement"],"removed":[]},{"type":3,"timestamp":1719080723,"nonce":"IJzz30wOi7/z5F4dUiAJt/sKBVY=","metadata":{"github-id":"IC_kwDOLg8lJc6CL12w","github-url":"https://github.com/roadster-rs/roadster/issues/235#issuecomment-2184142256"},"message":"\u003e Can we create the db connection pool (sql, redis, etc) without needing for it to be able to actually connect to the db?\n\nI don't think this is currently possible with seaorm, but I think it is with sqlx, so we may be able to submit a PR to seaorm to enable this behavior.","files":null},{"type":2,"timestamp":1719086858,"nonce":"5MRVQcLAk03DCmmWIJnktYSC0+Q=","metadata":{"github-id":"RTE_lADOLg8lJc6NH_KRzwAAAAMV29Xy"},"title":"Allow running cli commands without db connection","was":"Allow running cli commands without db connection"},{"type":3,"timestamp":1719099558,"nonce":"6jjWNFXWq3hINXjkhqqXfFWh/iU=","metadata":{"github-id":"IC_kwDOLg8lJc6CMQgU","github-url":"https://github.com/roadster-rs/roadster/issues/235#issuecomment-2184251412"},"message":"Opened a PR on SEA ORM: https://github.com/SeaQL/sea-orm/pull/2268","files":null},{"type":3,"timestamp":1719104167,"nonce":"PCY7a0o3V4UcHbie5oT1bxF14bg=","metadata":{"github-id":"IC_kwDOLg8lJc6CMXBr","github-url":"https://github.com/roadster-rs/roadster/issues/235#issuecomment-2184278123"},"message":"For redis/sidekiq, we need to move the \"stale cleanup\" behavior out of the \"build\" method so it runs after the service is built and after the \"handle cli\" method is run against the services.","files":null},{"type":3,"timestamp":1719161036,"nonce":"4WqDvlCblmWIgOf7huCi4qoq9Xw=","metadata":{"github-id":"IC_kwDOLg8lJc6CPrlv","github-url":"https://github.com/roadster-rs/roadster/issues/235#issuecomment-2185148783"},"message":"This should be a quick fix once https://github.com/SeaQL/sea-orm/pull/2268 is merged.","files":null},{"type":3,"timestamp":1719859831,"nonce":"e+NRgLUdAnDz30sEoJSkeXre5fY=","metadata":{"github-id":"IC_kwDOLg8lJc6DLZTx","github-url":"https://github.com/roadster-rs/roadster/issues/235#issuecomment-2200802545"},"message":"The seaorm team is taking a while to look at the proposed pr above.\n\nAn alternative could be to use a OnceLock to lazy init the db connection?","files":null},{"type":3,"timestamp":1719860172,"nonce":"dEiMyuLXDRQwt2YgHnG2xY5m3yc=","metadata":{"github-id":"IC_kwDOLg8lJc6DLbtJ","github-url":"https://github.com/roadster-rs/roadster/issues/235#issuecomment-2200812361"},"message":"Hmm, the problem with OnceLock is the db connection creation can return an error, so we would need to add a layer of checks everywhere the db connection is requested.","files":null},{"type":4,"timestamp":1724826332,"nonce":"rzSdx+al9ZmqHF9oqoF37vgL5NY=","metadata":{"github-id":"CE_lADOLg8lJc6NH_KRzwAAAANE5_Vb"},"status":2},{"type":4,"timestamp":1724826332,"nonce":"sIcpflZ/swAQNgKjQQ0EZQyJOFk=","metadata":{"github-id":"CE_lADOLg8lJc6NH_KRzwAAAANE5_Vs"},"status":2}]}