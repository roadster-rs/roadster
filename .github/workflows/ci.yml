name: Cargo Build & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test_roadster_with_no_features:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: pushd examples/${{ matrix.package_dir }}
      - name: Test
        run: cargo test --no-default-features --no-fail-fast
      - name: Check
        run: cargo check --no-default-features
      - name: Clippy
        run: cargo clippy --no-default-features -- -D warnings
      - name: Formatting
        run: cargo fmt --no-default-features -- --check
#
#  build_and_test_roadster_with_default_features:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - run: pushd examples/${{ matrix.package_dir }}
#      - name: Test
#        run: cargo test --no-fail-fast
#      - name: Check
#        run: cargo check
#      - name: Clippy
#        run: cargo clippy -- -D warnings
#      - name: Formatting
#        run: cargo fmt -- --check
#
#  build_and_test_roadster_with_all_feature_combinations:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        feature_1:
#          - sidekiq
#          - db-sql
#          - open-api
#        feature_2:
#          - sidekiq
#          - db-sql
#          - open-api
#        feature_3:
#          - sidekiq
#          - db-sql
#          - open-api
#    steps:
#      - uses: actions/checkout@v3
#      - run: export FEATURE_LIST=${{matrix.feature_1}},${{matrix.feature_2}},${{matrix.feature_3}}
#      - name: Test
#        run: cargo test --no-fail-fast --features $FEATURE_LIST
#      - name: Check
#        run: cargo check --features $FEATURE_LIST
#      - name: Clippy
#        run: cargo clippy --features $FEATURE_LIST -- -D warnings
#      - name: Formatting
#        run: cargo fmt --features $FEATURE_LIST -- --check
